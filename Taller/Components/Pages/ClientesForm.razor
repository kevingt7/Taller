@page "/clientes/nuevo"
@page "/clientes/editar/{ClienteID:int}"
@using Taller.Repositorios
@using Taller.Datos
@inject NavigationManager _navigator;
@inject IRepositorioCliente _repositorio;
<h2>@_mensaje Clientes</h2>
<EditForm Model="_cliente" FormName="frmPersona" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />
    <div class="row mb-3">
        <label for="txtNombre" class="col-2 col-form-label">Nombre</label>
        <div class="col-10">
            <InputText id="txtNombre" class="form-control" @bind-Value="_cliente.Nombre" />
            <ValidationMessage For="()=>_cliente.Nombre" />
        </div>
    </div>
    <div class="row mb-3">
        <label for="txtCorreo" class="col-2 col-form-label">Correo</label>
        <div class="col-10">
            <InputText id="txtCorreo" class="form-control" @bind-Value="_cliente.Correo" />
            <ValidationMessage For="()=>_cliente.Correo" />
        </div>
    </div>
    <div class="row mb-3">
        <label for="txtTelefono" class="col-2 col-form-label">Teléfono</label>
        <div class="col-10">
            <InputText id="txtTelefono" class="form-control" @bind-Value="_cliente.Telefono" />
            <ValidationMessage For="()=>_cliente.Telefono" />
        </div>
    </div>
    <button type="submit" class="btn btn-primary">Guardar</button>
    <button class="btn btn-danger ms-3" @onclick="Cancelar" @onclick:preventDefault>Cancelar</button>
</EditForm>

@code {
    [Parameter]
    public int ClienteID { get; set; }
    private string _mensaje = "";
    private Cliente? _cliente = new();

    private async void Guardar()
    {
        if (ClienteID > 0)
        {
            await _repositorio.UpdateCliente(ClienteID, _cliente!);
        }
        else
        {
            await _repositorio.Add(_cliente!);
        }
        Cancelar();
    }

    private void Cancelar()
    {
        _navigator.NavigateTo("/clientes");
    }
}